Search.setIndex({"docnames": ["api", "generated/cvpy.annotation.base.Credentials.Credentials", "generated/cvpy.annotation.base.Project.Project", "generated/cvpy.annotation.base.Project.Project.get_annotations", "generated/cvpy.annotation.base.Project.Project.post_images", "generated/cvpy.annotation.base.Project.Project.resume", "generated/cvpy.annotation.base.Project.Project.save", "generated/cvpy.annotation.cvat.CVATProject.CVATProject", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.get_annotations", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.post_images", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.resume", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.save", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times", "generated/cvpy.base.ImageTable.ImageTable", "generated/cvpy.base.ImageTable.ImageTable.as_dict", "generated/cvpy.base.ImageTable.ImageTable.has_decoded_images", "generated/cvpy.biomedimage.BiomedImage.BiomedImage", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.mask_image", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity", "generated/cvpy.image.Image.Image", "generated/cvpy.image.Image.Image.convert_numpy_to_wide", "generated/cvpy.image.Image.Image.convert_to_CAS_column", "generated/cvpy.image.Image.Image.convert_wide_to_numpy", "generated/cvpy.image.Image.Image.fetch_geometry_info", "generated/cvpy.image.Image.Image.fetch_image_array", "generated/cvpy.image.Image.Image.get_image_array", "generated/cvpy.image.Image.Image.get_image_array_const_ctype", "generated/cvpy.image.Image.Image.get_image_array_from_row", "generated/cvpy.image.Image.Image.mask_image", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count", "generated/cvpy.visualization.display_3D_image_slices", "generated/cvpy.visualization.display_3D_image_slices_from_array", "generated/cvpy.visualization.display_3D_surface", "generated/cvpy.visualization.display_image_slice", "index", "installation", "license"], "filenames": ["api.rst", "generated/cvpy.annotation.base.Credentials.Credentials.rst", "generated/cvpy.annotation.base.Project.Project.rst", "generated/cvpy.annotation.base.Project.Project.get_annotations.rst", "generated/cvpy.annotation.base.Project.Project.post_images.rst", "generated/cvpy.annotation.base.Project.Project.resume.rst", "generated/cvpy.annotation.base.Project.Project.save.rst", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.rst", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.get_annotations.rst", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.post_images.rst", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.resume.rst", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.save.rst", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults.rst", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times.rst", "generated/cvpy.base.ImageTable.ImageTable.rst", "generated/cvpy.base.ImageTable.ImageTable.as_dict.rst", "generated/cvpy.base.ImageTable.ImageTable.has_decoded_images.rst", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.rst", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.mask_image.rst", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient.rst", "generated/cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity.rst", "generated/cvpy.image.Image.Image.rst", "generated/cvpy.image.Image.Image.convert_numpy_to_wide.rst", "generated/cvpy.image.Image.Image.convert_to_CAS_column.rst", "generated/cvpy.image.Image.Image.convert_wide_to_numpy.rst", "generated/cvpy.image.Image.Image.fetch_geometry_info.rst", "generated/cvpy.image.Image.Image.fetch_image_array.rst", "generated/cvpy.image.Image.Image.get_image_array.rst", "generated/cvpy.image.Image.Image.get_image_array_const_ctype.rst", "generated/cvpy.image.Image.Image.get_image_array_from_row.rst", "generated/cvpy.image.Image.Image.mask_image.rst", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner.rst", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count.rst", "generated/cvpy.visualization.display_3D_image_slices.rst", "generated/cvpy.visualization.display_3D_image_slices_from_array.rst", "generated/cvpy.visualization.display_3D_surface.rst", "generated/cvpy.visualization.display_image_slice.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["API Reference", "cvpy.annotation.base.Credentials.Credentials", "cvpy.annotation.base.Project.Project", "cvpy.annotation.base.Project.Project.get_annotations", "cvpy.annotation.base.Project.Project.post_images", "cvpy.annotation.base.Project.Project.resume", "cvpy.annotation.base.Project.Project.save", "cvpy.annotation.cvat.CVATProject.CVATProject", "cvpy.annotation.cvat.CVATProject.CVATProject.get_annotations", "cvpy.annotation.cvat.CVATProject.CVATProject.post_images", "cvpy.annotation.cvat.CVATProject.CVATProject.resume", "cvpy.annotation.cvat.CVATProject.CVATProject.save", "cvpy.base.CASThreadTunerResults.CASThreadTunerResults", "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times", "cvpy.base.ImageTable.ImageTable", "cvpy.base.ImageTable.ImageTable.as_dict", "cvpy.base.ImageTable.ImageTable.has_decoded_images", "cvpy.biomedimage.BiomedImage.BiomedImage", "cvpy.biomedimage.BiomedImage.BiomedImage.mask_image", "cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient", "cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity", "cvpy.image.Image.Image", "cvpy.image.Image.Image.convert_numpy_to_wide", "cvpy.image.Image.Image.convert_to_CAS_column", "cvpy.image.Image.Image.convert_wide_to_numpy", "cvpy.image.Image.Image.fetch_geometry_info", "cvpy.image.Image.Image.fetch_image_array", "cvpy.image.Image.Image.get_image_array", "cvpy.image.Image.Image.get_image_array_const_ctype", "cvpy.image.Image.Image.get_image_array_from_row", "cvpy.image.Image.Image.mask_image", "cvpy.utils.CASThreadTuner.CASThreadTuner", "cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count", "cvpy.visualization.display_3D_image_slices", "cvpy.visualization.display_3D_image_slices_from_array", "cvpy.visualization.display_3D_surface", "cvpy.visualization.display_image_slice", "SAS Viya Computer Vision API for Python", "Installation", "License"], "terms": {"class": [1, 2, 7, 12, 13, 14, 17, 19, 20, 21, 31, 32, 39], "usernam": 1, "str": [1, 2, 5, 6, 7, 10, 11, 14, 19, 23, 25, 26, 28, 29, 33, 36], "none": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 17, 18, 19, 20, 21, 30, 32], "password": 1, "token": 1, "auth_fil": 1, "construct": [1, 12, 19, 20], "an": [1, 2, 5, 6, 18, 27, 28, 30, 32, 35, 36, 38, 39], "object": [1, 2, 3, 7, 8, 10, 12, 15, 19, 20, 32, 39], "contain": [1, 3, 4, 9, 14, 15, 16, 19, 20, 25, 39], "authent": [1, 37], "inform": [1, 25, 39], "The": [1, 2, 38, 39], "i": [1, 33, 34, 35, 37, 38, 39], "recommend": [1, 39], "higher": 1, "level": [1, 20, 37], "secur": 1, "thi": [1, 2, 3, 7, 15, 16, 37, 39], "auth": 1, "file": [1, 14, 38, 39], "must": [1, 2, 38, 39], "readabl": [1, 39], "writabl": 1, "group": 1, "other": [1, 39], "should": [1, 39], "have": [1, 38, 39], "singl": 1, "line": 1, "either": [1, 39], "comma": 1, "separ": [1, 39], "user": [1, 32, 37, 38], "If": [1, 38, 39], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "provid": [1, 37, 39], "constructor": 1, "read": [1, 10, 37], "default": 1, "annotation_auth": 1, "specifi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36], "server": [1, 2, 5, 7, 12], "name": [1, 2, 7, 10, 14, 23, 39], "path": [1, 5, 6, 10, 11, 14], "__init__": [1, 2, 7, 12, 14, 17, 21, 31], "method": [1, 2, 7, 12, 14, 17, 21, 31], "attribut": [1, 2, 7, 12, 14, 17, 21, 39], "cas_connect": [2, 5, 7, 10], "ca": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 23, 25, 26, 28, 32, 33, 37], "url": [2, 7], "credenti": [2, 5, 7, 38], "project_nam": [2, 5, 7, 10], "annotation_typ": [2, 7], "annotationtyp": [2, 7], "label": [2, 7, 14], "list": [2, 7, 12, 18, 19, 30, 39], "annotationlabel": [2, 7], "defin": [2, 7, 32, 39], "interfac": [2, 14, 39], "tool": [2, 12, 37], "ha": [2, 27, 29, 39], "sever": 2, "abstract": 2, "implement": [2, 17, 21], "subclass": 2, "requir": [2, 38, 39], "includ": [2, 39], "get_annot": 2, "post_imag": [2, 3], "resum": 2, "save": [2, 5, 10], "connect": [2, 5, 7, 10, 19, 20, 33], "cvat": [2, 3, 4, 5], "call": [2, 3, 7, 19, 20, 32], "rest": [2, 7], "api": [2, 7, 19, 20], "login": [2, 7], "type": [2, 7, 14, 26, 28, 39], "annotated_t": [3, 8], "castabl": [3, 8, 14, 18, 19, 20, 25, 30], "image_t": [3, 4, 8, 9, 19, 20], "imaget": [3, 4, 8, 9, 18, 19, 20, 30, 37], "fetch": [3, 8, 25, 26, 27, 35, 37], "from": [3, 4, 8, 9, 10, 19, 20, 25, 26, 27, 28, 29, 37, 38, 39], "correspond": [3, 8], "imag": [3, 4, 8, 9, 14, 16, 17, 18, 19, 20, 32, 33, 34, 35, 36, 37], "tabl": [3, 4, 5, 6, 8, 9, 10, 11, 14, 16, 18, 19, 20, 25, 26, 28, 30], "output": [3, 8, 18, 19, 20, 30], "where": [3, 5, 6, 8, 10, 11, 39], "store": [3, 8, 12], "input": [3, 4, 9, 14, 18, 20, 30, 36], "encod": [3, 4, 16], "were": [3, 5, 10], "us": [3, 8, 18, 20, 30, 38, 39], "cvatproject": 3, "creat": [4, 9, 15], "task": [4, 9], "under": [4, 5, 6, 9, 10, 11, 37, 39], "upload": [4, 9], "static": [5, 10, 22, 23, 24, 25, 26, 27, 28, 29, 32], "caslib": [5, 6, 10, 11], "relative_path": [5, 6, 10, 11], "session": [5, 6, 17, 21, 32], "cas_sess": [5, 17, 21], "which": [5, 6, 10, 11, 18, 19, 30, 39], "rel": [5, 6, 10, 11], "wa": [5, 8, 10, 39], "replac": [6, 11, 39], "bool": [6, 11, 16, 18, 20, 30, 33, 34, 35], "fals": [6, 11, 16, 18, 30, 33, 34, 35], "ar": [6, 11, 20, 38, 39], "when": [6, 11, 20, 33, 34, 35], "set": [6, 10, 11, 20, 32, 33, 34, 35, 37], "true": [6, 11, 16, 20, 33, 34, 35], "thei": [6, 11], "alreadi": [6, 11, 38], "present": [6, 11, 12], "interact": 7, "project": [7, 9, 10, 11, 37], "post": 8, "return": [10, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "A": [10, 39], "all": [10, 15, 39], "properti": [10, 15], "json": 10, "string": [10, 23], "cas_server_mod": 12, "casservermod": 12, "controller_thread_rang": [12, 32], "rang": [12, 32], "worker_thread_rang": [12, 32], "objective_measur": [12, 32], "statist": [12, 32], "controller_optimal_thread_count": 12, "int": [12, 18, 19, 25, 26, 27, 28, 29, 32, 33, 36], "worker_optimal_thread_count": 12, "mean_exec_tim": 12, "median_exec_tim": 12, "minimum_exec_tim": 12, "maximum_exec_tim": 12, "stdev_exec_tim": 12, "result": [12, 13, 37, 39], "thread": [12, 13, 32, 37], "optim": [12, 32], "architectur": 12, "control": [12, 32, 39], "node": [12, 32], "each": [12, 14, 19, 32, 39], "worker": [12, 32], "measur": [12, 32], "perform": [12, 13, 32, 39], "over": [12, 32], "given": [12, 13, 20, 32], "iter": [12, 32], "count": [12, 28, 32], "mean": [12, 32, 39], "record": 12, "execut": [12, 39], "time": 12, "median": [12, 32], "minimum": [12, 32, 36], "maximum": [12, 32, 36], "standard": 12, "deviat": 12, "fig_width": 13, "float": [13, 20, 32, 35], "8": [13, 38, 39], "fig_height": 13, "figur": 13, "plot": 13, "tuner": [13, 37], "width": [13, 19], "height": [13, 19], "matplotlib": [13, 37], "dimens": [14, 25, 26, 27, 28, 29, 36], "resolut": [14, 26, 27, 28, 29, 36], "imageformat": 14, "id": 14, "size": 14, "data": [14, 26, 37, 38], "column": [14, 18, 19, 23, 25, 30], "binari": [14, 20, 27, 28, 29], "format": [14, 26, 27, 29, 36, 39], "variabl": 14, "identifi": [14, 39], "byte": [14, 22, 24, 29], "length": 14, "dict": 15, "dictionari": 15, "represent": 15, "d": [15, 39], "kei": 15, "valu": [15, 20], "check": 16, "decod": [16, 18, 30], "b": [16, 39], "otherwis": [16, 39], "biomed": [17, 37], "process": [17, 21], "function": [17, 21, 32], "mask": [18, 30], "casout": [18, 30], "input_background": [18, 20], "0": [18, 25, 26, 33, 34, 35, 36, 37, 39], "output_background": 18, "add_column": 18, "copy_var": [18, 19, 30], "appli": [18, 30, 39], "pixel": 18, "intens": 18, "background": [18, 20], "swat": [18, 19, 20, 25, 30, 33, 35, 38], "whether": [18, 30, 39], "enum": [18, 30, 32], "metadata": 18, "ad": 18, "copi": [18, 19, 30, 39], "kernel_width": 19, "3": [19, 38, 39], "kernel_height": 19, "comput": [19, 32, 39], "morpholog": 19, "gradient": 19, "3d": [19, 29, 33, 34, 36], "grayscal": 19, "kernel": 19, "exampl": [19, 20, 38, 39], "import": [19, 20, 39], "base": [19, 20, 37, 39], "": [19, 20, 23, 39], "com": [19, 20, 37, 38], "5570": [19, 20], "biom": [19, 20], "pass": 19, "input_t": [19, 20], "output_t": [19, 20], "quantify_spher": [19, 37], "use_spac": 20, "label_connect": 20, "labelconnect": 20, "spheric": 20, "quantifi": 20, "compon": 20, "space": [20, 25], "calcul": 20, "face": [20, 35], "vertex": 20, "numpy_arrai": 22, "ndarrai": [22, 24, 26, 27, 28, 29, 32, 34], "convert": [22, 23, 24], "numpi": [22, 24, 26, 27, 28, 29, 34, 38], "arrai": [22, 24, 26, 27, 28, 34], "wide": [22, 24], "np": 22, "wide_imag": 24, "buffer": 24, "imdata": [25, 26], "n": [25, 26, 27, 28], "qry": [25, 26], "poscol": 25, "_position_": 25, "oricol": 25, "_orientation_": 25, "spacol": 25, "_spacing_": 25, "dimcol": 25, "_dimension_": [25, 26], "geometri": 25, "number": [25, 26, 27, 29, 32], "queri": [25, 26], "posit": [25, 36], "orient": [25, 36], "tupl": [25, 35, 36], "_image_": 26, "dim": [26, 36], "re": 26, "_resolution_": 26, "ctype": [26, 28], "_channeltype_": 26, "ccount": 26, "1": [26, 27, 28, 29, 35, 37, 38, 39], "addit": [26, 36, 39], "channel": [26, 27, 28, 29], "image_binari": [27, 28, 29], "channel_count": [27, 28, 29], "get": [27, 28, 29], "panda": [27, 28, 36], "seri": [27, 28, 36], "index": [27, 28, 33, 36], "option": [27, 29], "constant": 28, "myformat": 29, "row": 29, "arg": 31, "kwarg": 31, "action_funct": 32, "callabl": 32, "setup_funct": 32, "teardown_funct": 32, "5": [32, 38, 39], "4": [32, 39], "65": 32, "casthreadtunerresult": [32, 37], "action": [32, 37], "up": 32, "environ": [32, 38], "termin": [32, 39], "combin": [32, 39], "enummeta": 32, "stdev": 32, "__main__": 32, "self": 33, "hold": [33, 34, 35, 39], "slice_index_x": [33, 34], "slice_index_i": [33, 34], "slice_index_z": [33, 34], "displai": [33, 34, 35, 36, 39], "slice": [33, 34, 36], "held": [33, 34, 35], "x": 33, "axi": 33, "y": 33, "z": 33, "surfac": 35, "vdata": 35, "fdata": 35, "color": 35, "op": 35, "sasdatafram": 35, "vertic": 35, "opac": 35, "ress": 36, "fmt": 36, "poss": 36, "ori": 36, "sca": 36, "perm": 36, "image_index": 36, "slice_index": 36, "rf": 36, "imin": 36, "100": 36, "imax": 36, "400": 36, "scale": 36, "permiss": [36, 39], "date": [37, 39], "mar": 37, "09": 37, "2023": 37, "version": [37, 38, 39], "dev": 37, "sourc": [37, 39], "repositori": [37, 38], "http": [37, 38, 39], "github": [37, 38], "sassoftwar": [37, 38], "cvpy": 37, "issu": [37, 39], "idea": 37, "support": [37, 39], "document": [37, 39], "onlinedoc": 37, "html": 37, "high": 37, "librari": 37, "assist": 37, "biomedimag": 37, "help": 37, "visual": [37, 38], "These": 37, "allow": 37, "easili": 37, "abl": 37, "move": 37, "out": [37, 39], "common": [37, 39], "open": 37, "mayavi": 37, "streamlin": 37, "further": 37, "analysi": 37, "we": [37, 39], "welcom": 37, "your": [37, 38, 39], "pleas": [37, 38], "md": 37, "detail": [37, 38], "how": [37, 39], "submit": [37, 39], "apach": [37, 39], "2": [37, 38, 39], "see": [37, 38, 39], "full": [37, 38], "page": [37, 39], "instal": 37, "prerequisit": 37, "refer": 37, "mask_imag": 37, "morphological_gradi": 37, "util": 37, "casthreadtun": 37, "tune_thread_count": 37, "plot_exec_tim": 37, "convert_to_cas_column": 37, "convert_wide_to_numpi": 37, "convert_numpy_to_wid": 37, "fetch_geometry_info": 37, "fetch_image_arrai": 37, "get_image_array_from_row": 37, "get_image_arrai": 37, "get_image_array_const_ctyp": 37, "as_dict": 37, "has_decoded_imag": 37, "display_image_slic": 37, "display_3d_image_slices_from_arrai": 37, "display_3d_image_slic": 37, "display_3d_surfac": 37, "annot": [37, 39], "To": [38, 39], "access": 38, "capabl": 38, "you": [38, 39], "need": 38, "follow": [38, 39], "python": 38, "greater": 38, "can": 38, "anaconda": 38, "distribut": [38, 39], "anoth": 38, "choic": 38, "sa": 38, "script": 38, "wrapper": 38, "analyt": 38, "transfer": [38, 39], "packag": 38, "viya": 38, "activ": 38, "mine": 38, "machin": 38, "learn": 38, "vdmml": 38, "licens": 38, "scientif": 38, "also": [38, 39], "valid": 38, "backend": 38, "system": [38, 39], "administr": 38, "do": [38, 39], "account": 38, "written": [38, 39], "jupyt": 38, "notebook": 38, "wish": 38, "run": 38, "own": [38, 39], "still": 38, "view": 38, "browser": 38, "websit": 38, "heavi": 38, "complex": 38, "step": 38, "below": [38, 39], "vtk": 38, "critic": 38, "depend": 38, "pip": 38, "cp37": 38, "cp37m": 38, "win_amd64": 38, "whl": 38, "note": 38, "specif": [38, 39], "download": 38, "wheel": 38, "here": 38, "mai": [38, 39], "error": 38, "messag": 38, "about": 38, "like": 38, "build": 38, "correctli": 38, "first": 38, "ignor": 38, "pyqt": 38, "gui": 38, "toolkit": 38, "pyqt5": 38, "command": 38, "git": 38, "januari": 39, "2004": 39, "www": 39, "org": 39, "term": 39, "AND": 39, "condit": 39, "FOR": 39, "reproduct": 39, "definit": 39, "shall": 39, "section": 39, "through": 39, "9": 39, "licensor": 39, "copyright": 39, "owner": 39, "entiti": 39, "author": 39, "grant": 39, "legal": 39, "union": 39, "act": 39, "For": 39, "purpos": 39, "power": 39, "direct": 39, "indirect": 39, "caus": 39, "manag": 39, "contract": 39, "ii": 39, "ownership": 39, "fifti": 39, "percent": 39, "50": 39, "more": 39, "outstand": 39, "share": 39, "iii": 39, "benefici": 39, "individu": 39, "exercis": 39, "form": 39, "prefer": 39, "make": 39, "modif": 39, "limit": 39, "softwar": 39, "code": 39, "configur": 39, "ani": 39, "mechan": 39, "transform": 39, "translat": 39, "compil": 39, "gener": 39, "convers": 39, "media": 39, "work": 39, "authorship": 39, "made": 39, "avail": 39, "indic": 39, "notic": 39, "attach": 39, "appendix": 39, "deriv": 39, "editori": 39, "revis": 39, "elabor": 39, "repres": 39, "whole": 39, "origin": 39, "remain": 39, "mere": 39, "link": 39, "bind": 39, "thereof": 39, "contribut": 39, "intention": 39, "inclus": 39, "behalf": 39, "electron": 39, "verbal": 39, "commun": 39, "sent": 39, "its": 39, "mail": 39, "track": 39, "discuss": 39, "improv": 39, "exclud": 39, "conspicu": 39, "mark": 39, "design": 39, "write": 39, "Not": 39, "contributor": 39, "whom": 39, "been": 39, "receiv": 39, "subsequ": 39, "incorpor": 39, "within": 39, "subject": 39, "herebi": 39, "perpetu": 39, "worldwid": 39, "non": 39, "exclus": 39, "charg": 39, "royalti": 39, "free": 39, "irrevoc": 39, "reproduc": 39, "prepar": 39, "publicli": 39, "sublicens": 39, "patent": 39, "except": 39, "state": 39, "offer": 39, "sell": 39, "onli": 39, "those": 39, "claim": 39, "necessarili": 39, "infring": 39, "alon": 39, "institut": 39, "litig": 39, "against": 39, "cross": 39, "counterclaim": 39, "lawsuit": 39, "alleg": 39, "constitut": 39, "contributori": 39, "redistribut": 39, "medium": 39, "without": 39, "meet": 39, "give": 39, "recipi": 39, "modifi": 39, "carri": 39, "promin": 39, "chang": 39, "c": 39, "retain": 39, "trademark": 39, "pertain": 39, "part": 39, "text": 39, "least": 39, "one": 39, "place": 39, "along": 39, "wherev": 39, "third": 39, "parti": 39, "normal": 39, "appear": 39, "content": 39, "add": 39, "alongsid": 39, "addendum": 39, "cannot": 39, "constru": 39, "statement": 39, "differ": 39, "compli": 39, "submiss": 39, "unless": 39, "explicitli": 39, "notwithstand": 39, "abov": 39, "noth": 39, "herein": 39, "supersed": 39, "agreement": 39, "regard": 39, "6": 39, "doe": 39, "trade": 39, "servic": 39, "product": 39, "reason": 39, "customari": 39, "describ": 39, "7": 39, "disclaim": 39, "warranti": 39, "applic": 39, "law": 39, "agre": 39, "AS": 39, "basi": 39, "OR": 39, "OF": 39, "kind": 39, "express": 39, "impli": 39, "titl": 39, "merchant": 39, "fit": 39, "particular": 39, "sole": 39, "respons": 39, "determin": 39, "appropri": 39, "assum": 39, "risk": 39, "associ": 39, "liabil": 39, "In": 39, "event": 39, "theori": 39, "tort": 39, "neglig": 39, "deliber": 39, "grossli": 39, "liabl": 39, "damag": 39, "special": 39, "incident": 39, "consequenti": 39, "charact": 39, "aris": 39, "inabl": 39, "loss": 39, "goodwil": 39, "stoppag": 39, "failur": 39, "malfunct": 39, "commerci": 39, "even": 39, "advis": 39, "possibl": 39, "accept": 39, "while": 39, "choos": 39, "fee": 39, "indemn": 39, "oblig": 39, "right": 39, "consist": 39, "howev": 39, "indemnifi": 39, "defend": 39, "harmless": 39, "incur": 39, "assert": 39, "end": 39, "boilerpl": 39, "field": 39, "enclos": 39, "bracket": 39, "don": 39, "t": 39, "comment": 39, "syntax": 39, "descript": 39, "same": 39, "print": 39, "easier": 39, "identif": 39, "archiv": 39, "yyyi": 39, "complianc": 39, "obtain": 39, "languag": 39, "govern": 39}, "objects": {"": [[37, 0, 0, "-", "cvpy"]], "cvpy.annotation.base.Credentials": [[1, 1, 1, "", "Credentials"]], "cvpy.annotation.base.Credentials.Credentials": [[1, 2, 1, "", "__init__"]], "cvpy.annotation.base.Project": [[2, 1, 1, "", "Project"]], "cvpy.annotation.base.Project.Project": [[2, 2, 1, "", "__init__"], [3, 2, 1, "", "get_annotations"], [4, 2, 1, "", "post_images"], [5, 2, 1, "", "resume"], [6, 2, 1, "", "save"]], "cvpy.annotation.cvat.CVATProject": [[7, 1, 1, "", "CVATProject"]], "cvpy.annotation.cvat.CVATProject.CVATProject": [[7, 2, 1, "", "__init__"], [8, 2, 1, "", "get_annotations"], [9, 2, 1, "", "post_images"], [10, 2, 1, "", "resume"], [11, 2, 1, "", "save"]], "cvpy.base.CASThreadTunerResults": [[12, 1, 1, "", "CASThreadTunerResults"]], "cvpy.base.CASThreadTunerResults.CASThreadTunerResults": [[12, 2, 1, "", "__init__"], [13, 2, 1, "", "plot_exec_times"]], "cvpy.base.ImageTable": [[14, 1, 1, "", "ImageTable"]], "cvpy.base.ImageTable.ImageTable": [[14, 2, 1, "", "__init__"], [15, 2, 1, "", "as_dict"], [16, 2, 1, "", "has_decoded_images"]], "cvpy.biomedimage.BiomedImage": [[17, 1, 1, "", "BiomedImage"]], "cvpy.biomedimage.BiomedImage.BiomedImage": [[17, 2, 1, "", "__init__"], [18, 2, 1, "", "mask_image"], [19, 2, 1, "", "morphological_gradient"], [20, 2, 1, "", "quantify_sphericity"]], "cvpy.image.Image": [[21, 1, 1, "", "Image"]], "cvpy.image.Image.Image": [[21, 2, 1, "", "__init__"], [22, 2, 1, "", "convert_numpy_to_wide"], [23, 2, 1, "", "convert_to_CAS_column"], [24, 2, 1, "", "convert_wide_to_numpy"], [25, 2, 1, "", "fetch_geometry_info"], [26, 2, 1, "", "fetch_image_array"], [27, 2, 1, "", "get_image_array"], [28, 2, 1, "", "get_image_array_const_ctype"], [29, 2, 1, "", "get_image_array_from_row"], [30, 2, 1, "", "mask_image"]], "cvpy.utils.CASThreadTuner": [[31, 1, 1, "", "CASThreadTuner"]], "cvpy.utils.CASThreadTuner.CASThreadTuner": [[31, 2, 1, "", "__init__"], [32, 2, 1, "", "tune_thread_count"]], "cvpy.visualization": [[33, 3, 1, "", "display_3D_image_slices"], [34, 3, 1, "", "display_3D_image_slices_from_array"], [35, 3, 1, "", "display_3D_surface"], [36, 3, 1, "", "display_image_slice"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": [0, 37], "refer": 0, "biomed": 0, "imag": [0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "ca": 0, "thread": 0, "tuner": 0, "result": 0, "imaget": [0, 14, 15, 16], "visual": [0, 33, 34, 35, 36], "annot": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "project": [0, 2, 3, 4, 5, 6], "authent": 0, "cvpy": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38], "base": [1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16], "credenti": 1, "get_annot": [3, 8], "post_imag": [4, 9], "resum": [5, 10], "save": [6, 11], "cvat": [7, 8, 9, 10, 11], "cvatproject": [7, 8, 9, 10, 11], "casthreadtunerresult": [12, 13], "plot_exec_tim": 13, "as_dict": 15, "has_decoded_imag": 16, "biomedimag": [17, 18, 19, 20], "mask_imag": [18, 30], "morphological_gradi": 19, "quantify_spher": 20, "convert_numpy_to_wid": 22, "convert_to_cas_column": 23, "convert_wide_to_numpi": 24, "fetch_geometry_info": 25, "fetch_image_arrai": 26, "get_image_arrai": 27, "get_image_array_const_ctyp": 28, "get_image_array_from_row": 29, "util": [31, 32], "casthreadtun": [31, 32], "tune_thread_count": 32, "display_3d_image_slic": 33, "display_3d_image_slices_from_arrai": 34, "display_3d_surfac": 35, "display_image_slic": 36, "sa": 37, "viya": 37, "comput": 37, "vision": 37, "python": 37, "overview": 37, "contribut": 37, "licens": [37, 39], "addit": 37, "resourc": 37, "tabl": 37, "content": 37, "index": 37, "instal": 38, "prerequisit": 38, "mayavi": 38}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Biomedical Images": [[0, "biomedical-images"]], "CAS Thread Tuner": [[0, "cas-thread-tuner"]], "CAS Thread Tuner Results": [[0, "cas-thread-tuner-results"]], "Image": [[0, "image"]], "ImageTable": [[0, "imagetable"]], "Visualization Reference": [[0, "visualization-reference"]], "Annotations": [[0, "annotations"]], "Projects": [[0, "projects"]], "Authentication": [[0, "authentication"]], "cvpy.annotation.base.Credentials.Credentials": [[1, "cvpy-annotation-base-credentials-credentials"]], "cvpy.annotation.base.Project.Project": [[2, "cvpy-annotation-base-project-project"]], "cvpy.annotation.base.Project.Project.get_annotations": [[3, "cvpy-annotation-base-project-project-get-annotations"]], "cvpy.annotation.base.Project.Project.post_images": [[4, "cvpy-annotation-base-project-project-post-images"]], "cvpy.annotation.base.Project.Project.resume": [[5, "cvpy-annotation-base-project-project-resume"]], "cvpy.annotation.base.Project.Project.save": [[6, "cvpy-annotation-base-project-project-save"]], "cvpy.annotation.cvat.CVATProject.CVATProject": [[7, "cvpy-annotation-cvat-cvatproject-cvatproject"]], "cvpy.annotation.cvat.CVATProject.CVATProject.get_annotations": [[8, "cvpy-annotation-cvat-cvatproject-cvatproject-get-annotations"]], "cvpy.annotation.cvat.CVATProject.CVATProject.post_images": [[9, "cvpy-annotation-cvat-cvatproject-cvatproject-post-images"]], "cvpy.annotation.cvat.CVATProject.CVATProject.resume": [[10, "cvpy-annotation-cvat-cvatproject-cvatproject-resume"]], "cvpy.annotation.cvat.CVATProject.CVATProject.save": [[11, "cvpy-annotation-cvat-cvatproject-cvatproject-save"]], "cvpy.base.CASThreadTunerResults.CASThreadTunerResults": [[12, "cvpy-base-casthreadtunerresults-casthreadtunerresults"]], "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times": [[13, "cvpy-base-casthreadtunerresults-casthreadtunerresults-plot-exec-times"]], "cvpy.base.ImageTable.ImageTable": [[14, "cvpy-base-imagetable-imagetable"]], "cvpy.base.ImageTable.ImageTable.as_dict": [[15, "cvpy-base-imagetable-imagetable-as-dict"]], "cvpy.base.ImageTable.ImageTable.has_decoded_images": [[16, "cvpy-base-imagetable-imagetable-has-decoded-images"]], "cvpy.biomedimage.BiomedImage.BiomedImage": [[17, "cvpy-biomedimage-biomedimage-biomedimage"]], "cvpy.biomedimage.BiomedImage.BiomedImage.mask_image": [[18, "cvpy-biomedimage-biomedimage-biomedimage-mask-image"]], "cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient": [[19, "cvpy-biomedimage-biomedimage-biomedimage-morphological-gradient"]], "cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity": [[20, "cvpy-biomedimage-biomedimage-biomedimage-quantify-sphericity"]], "cvpy.image.Image.Image": [[21, "cvpy-image-image-image"]], "cvpy.image.Image.Image.convert_numpy_to_wide": [[22, "cvpy-image-image-image-convert-numpy-to-wide"]], "cvpy.image.Image.Image.convert_to_CAS_column": [[23, "cvpy-image-image-image-convert-to-cas-column"]], "cvpy.image.Image.Image.convert_wide_to_numpy": [[24, "cvpy-image-image-image-convert-wide-to-numpy"]], "cvpy.image.Image.Image.fetch_geometry_info": [[25, "cvpy-image-image-image-fetch-geometry-info"]], "cvpy.image.Image.Image.fetch_image_array": [[26, "cvpy-image-image-image-fetch-image-array"]], "cvpy.image.Image.Image.get_image_array": [[27, "cvpy-image-image-image-get-image-array"]], "cvpy.image.Image.Image.get_image_array_const_ctype": [[28, "cvpy-image-image-image-get-image-array-const-ctype"]], "cvpy.image.Image.Image.get_image_array_from_row": [[29, "cvpy-image-image-image-get-image-array-from-row"]], "cvpy.image.Image.Image.mask_image": [[30, "cvpy-image-image-image-mask-image"]], "cvpy.utils.CASThreadTuner.CASThreadTuner": [[31, "cvpy-utils-casthreadtuner-casthreadtuner"]], "cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count": [[32, "cvpy-utils-casthreadtuner-casthreadtuner-tune-thread-count"]], "cvpy.visualization.display_3D_image_slices": [[33, "cvpy-visualization-display-3d-image-slices"]], "cvpy.visualization.display_3D_image_slices_from_array": [[34, "cvpy-visualization-display-3d-image-slices-from-array"]], "cvpy.visualization.display_3D_surface": [[35, "cvpy-visualization-display-3d-surface"]], "cvpy.visualization.display_image_slice": [[36, "cvpy-visualization-display-image-slice"]], "SAS Viya Computer Vision API for Python": [[37, "module-cvpy"]], "Overview": [[37, "overview"]], "Contributing": [[37, "contributing"]], "License": [[37, "license"], [39, "license"]], "Additional Resources": [[37, "additional-resources"]], "Table of Contents": [[37, "table-of-contents"]], "Index": [[37, "index"]], "Installation": [[38, "installation"]], "Prerequisites": [[38, "prerequisites"]], "Mayavi Installation": [[38, "mayavi-installation"]], "CVPy Installation": [[38, "cvpy-installation"]]}, "indexentries": {"credentials (class in cvpy.annotation.base.credentials)": [[1, "cvpy.annotation.base.Credentials.Credentials"]], "__init__() (cvpy.annotation.base.credentials.credentials method)": [[1, "cvpy.annotation.base.Credentials.Credentials.__init__"]], "project (class in cvpy.annotation.base.project)": [[2, "cvpy.annotation.base.Project.Project"]], "__init__() (cvpy.annotation.base.project.project method)": [[2, "cvpy.annotation.base.Project.Project.__init__"]], "get_annotations() (cvpy.annotation.base.project.project method)": [[3, "cvpy.annotation.base.Project.Project.get_annotations"]], "post_images() (cvpy.annotation.base.project.project method)": [[4, "cvpy.annotation.base.Project.Project.post_images"]], "resume() (cvpy.annotation.base.project.project static method)": [[5, "cvpy.annotation.base.Project.Project.resume"]], "save() (cvpy.annotation.base.project.project method)": [[6, "cvpy.annotation.base.Project.Project.save"]], "cvatproject (class in cvpy.annotation.cvat.cvatproject)": [[7, "cvpy.annotation.cvat.CVATProject.CVATProject"]], "__init__() (cvpy.annotation.cvat.cvatproject.cvatproject method)": [[7, "cvpy.annotation.cvat.CVATProject.CVATProject.__init__"]], "get_annotations() (cvpy.annotation.cvat.cvatproject.cvatproject method)": [[8, "cvpy.annotation.cvat.CVATProject.CVATProject.get_annotations"]], "post_images() (cvpy.annotation.cvat.cvatproject.cvatproject method)": [[9, "cvpy.annotation.cvat.CVATProject.CVATProject.post_images"]], "resume() (cvpy.annotation.cvat.cvatproject.cvatproject static method)": [[10, "cvpy.annotation.cvat.CVATProject.CVATProject.resume"]], "save() (cvpy.annotation.cvat.cvatproject.cvatproject method)": [[11, "cvpy.annotation.cvat.CVATProject.CVATProject.save"]], "casthreadtunerresults (class in cvpy.base.casthreadtunerresults)": [[12, "cvpy.base.CASThreadTunerResults.CASThreadTunerResults"]], "__init__() (cvpy.base.casthreadtunerresults.casthreadtunerresults method)": [[12, "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.__init__"]], "plot_exec_times() (cvpy.base.casthreadtunerresults.casthreadtunerresults method)": [[13, "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times"]], "imagetable (class in cvpy.base.imagetable)": [[14, "cvpy.base.ImageTable.ImageTable"]], "__init__() (cvpy.base.imagetable.imagetable method)": [[14, "cvpy.base.ImageTable.ImageTable.__init__"]], "as_dict() (cvpy.base.imagetable.imagetable method)": [[15, "cvpy.base.ImageTable.ImageTable.as_dict"]], "has_decoded_images() (cvpy.base.imagetable.imagetable method)": [[16, "cvpy.base.ImageTable.ImageTable.has_decoded_images"]], "biomedimage (class in cvpy.biomedimage.biomedimage)": [[17, "cvpy.biomedimage.BiomedImage.BiomedImage"]], "__init__() (cvpy.biomedimage.biomedimage.biomedimage method)": [[17, "cvpy.biomedimage.BiomedImage.BiomedImage.__init__"]], "mask_image() (cvpy.biomedimage.biomedimage.biomedimage method)": [[18, "cvpy.biomedimage.BiomedImage.BiomedImage.mask_image"]], "morphological_gradient() (cvpy.biomedimage.biomedimage.biomedimage method)": [[19, "cvpy.biomedimage.BiomedImage.BiomedImage.morphological_gradient"]], "quantify_sphericity() (cvpy.biomedimage.biomedimage.biomedimage method)": [[20, "cvpy.biomedimage.BiomedImage.BiomedImage.quantify_sphericity"]], "image (class in cvpy.image.image)": [[21, "cvpy.image.Image.Image"]], "__init__() (cvpy.image.image.image method)": [[21, "cvpy.image.Image.Image.__init__"]], "convert_numpy_to_wide() (cvpy.image.image.image static method)": [[22, "cvpy.image.Image.Image.convert_numpy_to_wide"]], "convert_to_cas_column() (cvpy.image.image.image static method)": [[23, "cvpy.image.Image.Image.convert_to_CAS_column"]], "convert_wide_to_numpy() (cvpy.image.image.image static method)": [[24, "cvpy.image.Image.Image.convert_wide_to_numpy"]], "fetch_geometry_info() (cvpy.image.image.image static method)": [[25, "cvpy.image.Image.Image.fetch_geometry_info"]], "fetch_image_array() (cvpy.image.image.image static method)": [[26, "cvpy.image.Image.Image.fetch_image_array"]], "get_image_array() (cvpy.image.image.image static method)": [[27, "cvpy.image.Image.Image.get_image_array"]], "get_image_array_const_ctype() (cvpy.image.image.image static method)": [[28, "cvpy.image.Image.Image.get_image_array_const_ctype"]], "get_image_array_from_row() (cvpy.image.image.image static method)": [[29, "cvpy.image.Image.Image.get_image_array_from_row"]], "mask_image() (cvpy.image.image.image method)": [[30, "cvpy.image.Image.Image.mask_image"]], "casthreadtuner (class in cvpy.utils.casthreadtuner)": [[31, "cvpy.utils.CASThreadTuner.CASThreadTuner"]], "__init__() (cvpy.utils.casthreadtuner.casthreadtuner method)": [[31, "cvpy.utils.CASThreadTuner.CASThreadTuner.__init__"]], "tune_thread_count() (cvpy.utils.casthreadtuner.casthreadtuner static method)": [[32, "cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count"]], "display_3d_image_slices() (in module cvpy.visualization)": [[33, "cvpy.visualization.display_3D_image_slices"]], "display_3d_image_slices_from_array() (in module cvpy.visualization)": [[34, "cvpy.visualization.display_3D_image_slices_from_array"]], "display_3d_surface() (in module cvpy.visualization)": [[35, "cvpy.visualization.display_3D_surface"]], "display_image_slice() (in module cvpy.visualization)": [[36, "cvpy.visualization.display_image_slice"]], "cvpy": [[37, "module-cvpy"]], "module": [[37, "module-cvpy"]]}})