Search.setIndex({"docnames": ["api", "generated/cvpy.annotation.base.Credentials.Credentials", "generated/cvpy.annotation.cvat.CVATAuthenticator.CVATAuthenticator", "generated/cvpy.annotation.cvat.CVATAuthenticator.CVATAuthenticator.generate_cvat_token", "generated/cvpy.annotation.cvat.CVATProject.CVATProject", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.get_annotations", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.post_images", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.resume", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.save", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times", "generated/cvpy.base.ImageTable.ImageTable", "generated/cvpy.base.ImageTable.ImageTable.as_dict", "generated/cvpy.base.ImageTable.ImageTable.from_table", "generated/cvpy.base.ImageTable.ImageTable.has_decoded_images", "generated/cvpy.base.ImageTable.ImageTable.load", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.as_dict", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.fetch_geometry_info", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.fetch_image_array", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.has_decoded_images", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.morphological_gradient", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.sphericity", "generated/cvpy.image.NaturalImageTable.NaturalImageTable", "generated/cvpy.image.NaturalImageTable.NaturalImageTable.as_dict", "generated/cvpy.image.NaturalImageTable.NaturalImageTable.has_decoded_images", "generated/cvpy.image.NaturalImageTable.NaturalImageTable.mask_image", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count", "generated/cvpy.utils.ImageUtils.ImageUtils", "generated/cvpy.utils.ImageUtils.ImageUtils.convert_numpy_to_wide", "generated/cvpy.utils.ImageUtils.ImageUtils.convert_to_CAS_column", "generated/cvpy.utils.ImageUtils.ImageUtils.convert_wide_to_numpy", "generated/cvpy.utils.ImageUtils.ImageUtils.get_image_array", "generated/cvpy.utils.ImageUtils.ImageUtils.get_image_array_const_ctype", "generated/cvpy.utils.ImageUtils.ImageUtils.get_image_array_from_row", "generated/cvpy.visualization.display_3D_image_slices", "generated/cvpy.visualization.display_3D_image_slices_from_array", "generated/cvpy.visualization.display_3D_surface", "generated/cvpy.visualization.display_image_slice", "index", "installation", "license"], "filenames": ["api.rst", "generated/cvpy.annotation.base.Credentials.Credentials.rst", "generated/cvpy.annotation.cvat.CVATAuthenticator.CVATAuthenticator.rst", "generated/cvpy.annotation.cvat.CVATAuthenticator.CVATAuthenticator.generate_cvat_token.rst", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.rst", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.get_annotations.rst", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.post_images.rst", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.resume.rst", "generated/cvpy.annotation.cvat.CVATProject.CVATProject.save.rst", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults.rst", "generated/cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times.rst", "generated/cvpy.base.ImageTable.ImageTable.rst", "generated/cvpy.base.ImageTable.ImageTable.as_dict.rst", "generated/cvpy.base.ImageTable.ImageTable.from_table.rst", "generated/cvpy.base.ImageTable.ImageTable.has_decoded_images.rst", "generated/cvpy.base.ImageTable.ImageTable.load.rst", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.rst", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.as_dict.rst", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.fetch_geometry_info.rst", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.fetch_image_array.rst", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.has_decoded_images.rst", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.morphological_gradient.rst", "generated/cvpy.biomedimage.BiomedImageTable.BiomedImageTable.sphericity.rst", "generated/cvpy.image.NaturalImageTable.NaturalImageTable.rst", "generated/cvpy.image.NaturalImageTable.NaturalImageTable.as_dict.rst", "generated/cvpy.image.NaturalImageTable.NaturalImageTable.has_decoded_images.rst", "generated/cvpy.image.NaturalImageTable.NaturalImageTable.mask_image.rst", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner.rst", "generated/cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count.rst", "generated/cvpy.utils.ImageUtils.ImageUtils.rst", "generated/cvpy.utils.ImageUtils.ImageUtils.convert_numpy_to_wide.rst", "generated/cvpy.utils.ImageUtils.ImageUtils.convert_to_CAS_column.rst", "generated/cvpy.utils.ImageUtils.ImageUtils.convert_wide_to_numpy.rst", "generated/cvpy.utils.ImageUtils.ImageUtils.get_image_array.rst", "generated/cvpy.utils.ImageUtils.ImageUtils.get_image_array_const_ctype.rst", "generated/cvpy.utils.ImageUtils.ImageUtils.get_image_array_from_row.rst", "generated/cvpy.visualization.display_3D_image_slices.rst", "generated/cvpy.visualization.display_3D_image_slices_from_array.rst", "generated/cvpy.visualization.display_3D_surface.rst", "generated/cvpy.visualization.display_image_slice.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["API Reference", "cvpy.annotation.base.Credentials.Credentials", "cvpy.annotation.cvat.CVATAuthenticator.CVATAuthenticator", "cvpy.annotation.cvat.CVATAuthenticator.CVATAuthenticator.generate_cvat_token", "cvpy.annotation.cvat.CVATProject.CVATProject", "cvpy.annotation.cvat.CVATProject.CVATProject.get_annotations", "cvpy.annotation.cvat.CVATProject.CVATProject.post_images", "cvpy.annotation.cvat.CVATProject.CVATProject.resume", "cvpy.annotation.cvat.CVATProject.CVATProject.save", "cvpy.base.CASThreadTunerResults.CASThreadTunerResults", "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times", "cvpy.base.ImageTable.ImageTable", "cvpy.base.ImageTable.ImageTable.as_dict", "cvpy.base.ImageTable.ImageTable.from_table", "cvpy.base.ImageTable.ImageTable.has_decoded_images", "cvpy.base.ImageTable.ImageTable.load", "cvpy.biomedimage.BiomedImageTable.BiomedImageTable", "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.as_dict", "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.fetch_geometry_info", "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.fetch_image_array", "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.has_decoded_images", "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.morphological_gradient", "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.sphericity", "cvpy.image.NaturalImageTable.NaturalImageTable", "cvpy.image.NaturalImageTable.NaturalImageTable.as_dict", "cvpy.image.NaturalImageTable.NaturalImageTable.has_decoded_images", "cvpy.image.NaturalImageTable.NaturalImageTable.mask_image", "cvpy.utils.CASThreadTuner.CASThreadTuner", "cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count", "cvpy.utils.ImageUtils.ImageUtils", "cvpy.utils.ImageUtils.ImageUtils.convert_numpy_to_wide", "cvpy.utils.ImageUtils.ImageUtils.convert_to_CAS_column", "cvpy.utils.ImageUtils.ImageUtils.convert_wide_to_numpy", "cvpy.utils.ImageUtils.ImageUtils.get_image_array", "cvpy.utils.ImageUtils.ImageUtils.get_image_array_const_ctype", "cvpy.utils.ImageUtils.ImageUtils.get_image_array_from_row", "cvpy.visualization.display_3D_image_slices", "cvpy.visualization.display_3D_image_slices_from_array", "cvpy.visualization.display_3D_surface", "cvpy.visualization.display_image_slice", "SAS Viya Computer Vision API for Python", "Installation", "License"], "terms": {"class": [1, 2, 4, 9, 10, 11, 16, 19, 21, 22, 23, 26, 27, 28, 29, 42], "usernam": [1, 3], "str": [1, 4, 7, 8, 11, 13, 15, 16, 18, 19, 21, 22, 23, 26, 31, 34, 35, 36, 39], "none": [1, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 18, 19, 21, 22, 23, 26, 28], "password": [1, 3], "token": [1, 3], "auth_fil": 1, "construct": [1, 9, 21, 22], "an": [1, 13, 15, 26, 28, 33, 34, 38, 39, 41, 42], "object": [1, 4, 5, 7, 9, 12, 17, 21, 22, 24, 28, 42], "contain": [1, 6, 11, 12, 13, 14, 15, 16, 17, 20, 23, 24, 25, 42], "authent": [1, 2, 3], "inform": [1, 18, 42], "The": [1, 15, 41, 42], "i": [1, 7, 23, 36, 37, 38, 40, 41, 42], "recommend": [1, 42], "higher": 1, "level": [1, 22, 40], "secur": 1, "thi": [1, 3, 4, 7, 12, 14, 17, 18, 19, 20, 21, 22, 24, 25, 40, 42], "auth": 1, "file": [1, 3, 11, 13, 16, 23, 41, 42], "must": [1, 41, 42], "readabl": [1, 42], "writabl": 1, "group": 1, "other": [1, 42], "should": [1, 42], "have": [1, 41, 42], "singl": 1, "line": 1, "either": [1, 13, 42], "comma": 1, "separ": [1, 42], "user": [1, 3, 28, 40, 41], "If": [1, 7, 41, 42], "paramet": [1, 4, 5, 6, 7, 8, 9, 10, 15, 16, 18, 19, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "provid": [1, 40, 42], "constructor": 1, "read": [1, 7, 40], "default": [1, 15], "annotation_auth": [1, 3], "specifi": [1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "server": [1, 3, 4, 9, 15], "name": [1, 3, 4, 7, 11, 13, 16, 23, 31, 42], "path": [1, 7, 8, 11, 13, 15, 16, 23], "__init__": [1, 2, 4, 9, 11, 16, 23, 27, 29], "method": [1, 2, 4, 9, 11, 16, 23, 27, 29], "attribut": [1, 2, 4, 9, 11, 16, 23, 42], "defin": [2, 4, 28, 42], "arg": [2, 27, 29], "kwarg": [2, 27, 29], "static": [3, 7, 13, 15, 28, 30, 31, 32, 33, 34, 35], "against": [3, 42], "function": [3, 16, 23, 28], "prompt": 3, "enter": 3, "url": [3, 4], "In": [3, 42], "case": 3, "success": 3, "write": [3, 42], "return": [3, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35], "": [3, 21, 22, 31, 42], "home": 3, "directori": 3, "cas_connect": [4, 7], "ca": [4, 5, 6, 7, 8, 9, 10, 15, 21, 22, 28, 31, 34, 36, 40], "credenti": [4, 41], "project_nam": [4, 7], "annotation_typ": 4, "annotationtyp": 4, "label": [4, 11, 13, 16, 23], "list": [4, 9, 15, 21, 26, 42], "annotationlabel": 4, "interact": 4, "project": [4, 6, 7, 8, 40], "connect": [4, 7, 15, 21, 22, 36], "call": [4, 15, 21, 22, 28], "rest": 4, "api": [4, 21, 22], "login": 4, "type": [4, 11, 13, 16, 19, 23, 34, 42], "image_t": [5, 6, 15, 21, 22], "imaget": [5, 6, 26], "annotated_t": 5, "castabl": [5, 11, 13, 16, 21, 22, 23], "fetch": [5, 18, 19, 33, 38, 40], "from": [5, 6, 7, 13, 18, 19, 21, 22, 33, 34, 35, 40, 41, 42], "correspond": 5, "imag": [5, 6, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40], "tabl": [5, 6, 7, 8, 11, 14, 15, 16, 20, 21, 22, 23, 25, 26, 34], "wa": [5, 7, 42], "us": [5, 7, 22, 26, 41, 42], "post": 5, "output": [5, 15, 21, 22, 26], "where": [5, 7, 8, 42], "store": [5, 9], "creat": [6, 12, 13, 17, 24], "task": 6, "under": [6, 7, 8, 40, 42], "upload": 6, "input": [6, 11, 13, 16, 22, 23, 39], "caslib": [7, 8], "relative_path": [7, 8], "rel": [7, 8], "which": [7, 8, 21, 26, 42], "were": 7, "save": 7, "activ": [7, 41], "A": [7, 23, 42], "all": [7, 12, 17, 24, 42], "properti": [7, 12, 17, 24], "set": [7, 8, 22, 28, 36, 37, 38, 40], "json": 7, "string": [7, 31], "replac": [8, 42], "bool": [8, 14, 20, 22, 25, 26, 36, 37, 38], "fals": [8, 14, 20, 25, 26, 36, 37, 38], "ar": [8, 22, 41, 42], "when": [8, 22, 36, 37, 38], "true": [8, 14, 20, 22, 25, 36, 37, 38], "thei": 8, "alreadi": [8, 41], "present": [8, 9], "cas_server_mod": 9, "casservermod": 9, "controller_thread_rang": [9, 28], "rang": [9, 28], "worker_thread_rang": [9, 28], "objective_measur": [9, 28], "statist": [9, 28], "controller_optimal_thread_count": 9, "int": [9, 18, 19, 21, 28, 33, 34, 35, 36, 39], "worker_optimal_thread_count": 9, "mean_exec_tim": 9, "median_exec_tim": 9, "minimum_exec_tim": 9, "maximum_exec_tim": 9, "stdev_exec_tim": 9, "result": [9, 10, 40, 42], "thread": [9, 10, 28, 40], "optim": [9, 28], "tool": [9, 40], "architectur": 9, "control": [9, 28, 42], "node": [9, 28], "each": [9, 11, 13, 16, 21, 23, 28, 42], "worker": [9, 28], "measur": [9, 28], "perform": [9, 10, 28, 42], "over": [9, 28], "given": [9, 10, 22, 28], "iter": [9, 28], "count": [9, 28, 34], "mean": [9, 28, 42], "record": 9, "execut": [9, 42], "time": 9, "median": [9, 28], "minimum": [9, 28, 39], "maximum": [9, 28, 39], "standard": 9, "deviat": 9, "fig_width": 10, "float": [10, 22, 28, 38], "8": [10, 41, 42], "fig_height": 10, "figur": 10, "plot": 10, "tuner": [10, 40], "width": [10, 21], "height": [10, 21], "matplotlib": [10, 40], "dimens": [11, 13, 16, 18, 19, 23, 33, 34, 35, 39], "resolut": [11, 13, 16, 19, 23, 33, 34, 35, 39], "imageformat": [11, 13, 16, 23], "id": [11, 13, 16, 23], "size": [11, 13, 16, 23], "naturalimaget": [11, 13, 15], "biomedimaget": [11, 13, 15], "data": [11, 13, 16, 23, 40, 41], "column": [11, 13, 16, 18, 21, 23, 26, 31], "binari": [11, 13, 16, 23, 33, 34, 35], "format": [11, 13, 16, 19, 23, 33, 35, 39, 42], "variabl": [11, 13, 16, 23], "identifi": [11, 13, 16, 23, 42], "byte": [11, 13, 16, 23, 30, 32, 35], "length": [11, 13, 16, 23], "dict": [12, 15, 17, 21, 22, 24, 26], "dictionari": [12, 17, 24], "represent": [12, 17, 24], "d": [12, 17, 24, 42], "kei": [12, 17, 24], "valu": [12, 17, 22, 24], "cas_tabl": 13, "image_typ": [13, 15], "imagetyp": 13, "biom": [13, 21, 22], "natur": [13, 23, 40], "instanc": [13, 15], "check": [14, 20, 25], "decod": [14, 20, 25, 26], "encod": [14, 20, 25], "b": [14, 20, 25, 42], "otherwis": [14, 20, 25, 42], "load_parm": 15, "output_table_parm": [15, 21, 22, 26], "loadimag": 15, "action": [15, 28, 40], "can": [15, 41], "found": 15, "here": [15, 41], "http": [15, 40, 41, 42], "go": 15, "document": [15, 40, 42], "sa": [15, 41], "com": [15, 21, 22, 40, 41], "doc": 15, "en": 15, "pgmsascdc": 15, "casactml": 15, "htm": 15, "compg": 15, "casoutt": 15, "15param": 15, "implement": [16, 23], "biomed": [16, 23, 40], "process": [16, 23], "n": [18, 19, 33, 34], "0": [18, 19, 36, 37, 38, 39, 40, 42], "qry": [18, 19], "poscol": 18, "_position_": 18, "oricol": 18, "_orientation_": 18, "spacol": 18, "_spacing_": 18, "dimcol": 18, "_dimension_": [18, 19], "tupl": [18, 38, 39], "geometri": 18, "number": [18, 19, 28, 33, 35], "queri": [18, 19], "posit": [18, 39], "orient": [18, 39], "space": [18, 22], "_image_": 19, "dim": [19, 39], "re": 19, "_resolution_": 19, "ctype": [19, 34], "_channeltype_": 19, "ccount": 19, "1": [19, 33, 34, 35, 38, 40, 41, 42], "ndarrai": [19, 28, 30, 32, 33, 34, 35, 37], "arrai": [19, 30, 32, 33, 34, 37], "addit": [19, 39, 42], "channel": [19, 33, 34, 35], "numpi": [19, 30, 32, 33, 34, 35, 37, 41], "kernel_width": 21, "3": [21, 41, 42], "kernel_height": 21, "copy_var": [21, 26], "comput": [21, 28, 42], "morpholog": 21, "gradient": 21, "3d": [21, 35, 36, 37, 39], "grayscal": 21, "kernel": 21, "copi": [21, 26, 42], "exampl": [21, 22, 41, 42], "import": [21, 22, 42], "swat": [21, 22, 36, 38, 41], "labelconnect": [21, 22], "5570": [21, 22], "pass": 21, "output_t": [21, 22], "use_spac": 22, "input_background": 22, "label_connect": 22, "quantifi": 22, "compon": 22, "calcul": 22, "background": 22, "face": [22, 38], "vertex": 22, "ani": [23, 42], "photograph": 23, "mask": 26, "add_column": 26, "appli": [26, 42], "whether": [26, 42], "extra": 26, "add": [26, 42], "action_funct": 28, "callabl": 28, "setup_funct": 28, "teardown_funct": 28, "5": [28, 41, 42], "4": [28, 42], "65": 28, "casthreadtunerresult": 28, "up": 28, "environ": [28, 41], "termin": [28, 42], "session": 28, "combin": [28, 42], "enum": 28, "enummeta": 28, "stdev": 28, "__main__": 28, "numpy_arrai": 30, "convert": [30, 31, 32], "wide": [30, 32], "np": 30, "wide_imag": 32, "buffer": 32, "image_binari": [33, 34, 35], "channel_count": [33, 34, 35], "get": [33, 34, 35], "panda": [33, 34, 39], "seri": [33, 34, 39], "index": [33, 34, 36, 39], "option": [33, 35], "ha": [33, 35, 42], "constant": 34, "myformat": 35, "row": 35, "self": 36, "hold": [36, 37, 38, 42], "slice_index_x": [36, 37], "slice_index_i": [36, 37], "slice_index_z": [36, 37], "displai": [36, 37, 38, 39, 42], "slice": [36, 37, 39], "held": [36, 37, 38], "x": 36, "axi": 36, "y": 36, "z": 36, "surfac": 38, "vdata": 38, "fdata": 38, "color": 38, "op": 38, "sasdatafram": 38, "vertic": 38, "opac": 38, "ress": 39, "fmt": 39, "poss": 39, "ori": 39, "sca": 39, "perm": 39, "image_index": 39, "slice_index": 39, "rf": 39, "imin": 39, "100": 39, "imax": 39, "400": 39, "scale": 39, "permiss": [39, 42], "date": [40, 42], "mar": 40, "30": 40, "2023": 40, "version": [40, 41, 42], "dev": 40, "sourc": [40, 42], "repositori": [40, 41], "github": [40, 41], "sassoftwar": [40, 41], "cvpy": 40, "issu": [40, 42], "idea": 40, "support": [40, 42], "onlinedoc": 40, "html": 40, "high": 40, "librari": 40, "assist": 40, "biomedimag": 40, "help": 40, "visual": [40, 41], "These": 40, "allow": 40, "easili": 40, "abl": 40, "move": 40, "out": [40, 42], "common": [40, 42], "open": 40, "mayavi": 40, "streamlin": 40, "further": 40, "analysi": 40, "we": [40, 42], "welcom": 40, "your": [40, 41, 42], "pleas": [40, 41], "md": 40, "detail": [40, 41], "how": [40, 42], "submit": [40, 42], "apach": [40, 42], "2": [40, 41, 42], "see": [40, 41, 42], "full": [40, 41], "page": [40, 42], "instal": 40, "prerequisit": 40, "refer": 40, "annot": [40, 42], "base": [40, 42], "cvat": 40, "util": 40, "display_image_slic": 40, "display_3d_image_slices_from_arrai": 40, "display_3d_image_slic": 40, "display_3d_surfac": 40, "To": [41, 42], "access": 41, "capabl": 41, "you": [41, 42], "need": 41, "follow": [41, 42], "python": 41, "greater": 41, "anaconda": 41, "distribut": [41, 42], "anoth": 41, "choic": 41, "script": 41, "wrapper": 41, "analyt": 41, "transfer": [41, 42], "packag": 41, "viya": 41, "mine": 41, "machin": 41, "learn": 41, "vdmml": 41, "licens": 41, "scientif": 41, "also": [41, 42], "valid": 41, "backend": 41, "system": [41, 42], "administr": 41, "do": [41, 42], "account": 41, "written": [41, 42], "jupyt": 41, "notebook": 41, "wish": 41, "run": 41, "own": [41, 42], "still": 41, "view": 41, "browser": 41, "websit": 41, "heavi": 41, "complex": 41, "requir": [41, 42], "step": 41, "below": [41, 42], "vtk": 41, "critic": 41, "depend": 41, "pip": 41, "cp37": 41, "cp37m": 41, "win_amd64": 41, "whl": 41, "note": 41, "specif": [41, 42], "download": 41, "wheel": 41, "mai": [41, 42], "error": 41, "messag": 41, "about": 41, "like": 41, "build": 41, "correctli": 41, "first": 41, "ignor": 41, "pyqt": 41, "gui": 41, "toolkit": 41, "pyqt5": 41, "command": 41, "git": 41, "januari": 42, "2004": 42, "www": 42, "org": 42, "term": 42, "AND": 42, "condit": 42, "FOR": 42, "reproduct": 42, "definit": 42, "shall": 42, "section": 42, "through": 42, "9": 42, "licensor": 42, "copyright": 42, "owner": 42, "entiti": 42, "author": 42, "grant": 42, "legal": 42, "union": 42, "act": 42, "For": 42, "purpos": 42, "power": 42, "direct": 42, "indirect": 42, "caus": 42, "manag": 42, "contract": 42, "ii": 42, "ownership": 42, "fifti": 42, "percent": 42, "50": 42, "more": 42, "outstand": 42, "share": 42, "iii": 42, "benefici": 42, "individu": 42, "exercis": 42, "form": 42, "prefer": 42, "make": 42, "modif": 42, "includ": 42, "limit": 42, "softwar": 42, "code": 42, "configur": 42, "mechan": 42, "transform": 42, "translat": 42, "compil": 42, "gener": 42, "convers": 42, "media": 42, "work": 42, "authorship": 42, "made": 42, "avail": 42, "indic": 42, "notic": 42, "attach": 42, "appendix": 42, "deriv": 42, "editori": 42, "revis": 42, "elabor": 42, "repres": 42, "whole": 42, "origin": 42, "remain": 42, "mere": 42, "link": 42, "bind": 42, "interfac": 42, "thereof": 42, "contribut": 42, "intention": 42, "inclus": 42, "behalf": 42, "electron": 42, "verbal": 42, "commun": 42, "sent": 42, "its": 42, "mail": 42, "track": 42, "discuss": 42, "improv": 42, "exclud": 42, "conspicu": 42, "mark": 42, "design": 42, "Not": 42, "contributor": 42, "whom": 42, "been": 42, "receiv": 42, "subsequ": 42, "incorpor": 42, "within": 42, "subject": 42, "herebi": 42, "perpetu": 42, "worldwid": 42, "non": 42, "exclus": 42, "charg": 42, "royalti": 42, "free": 42, "irrevoc": 42, "reproduc": 42, "prepar": 42, "publicli": 42, "sublicens": 42, "patent": 42, "except": 42, "state": 42, "offer": 42, "sell": 42, "onli": 42, "those": 42, "claim": 42, "necessarili": 42, "infring": 42, "alon": 42, "institut": 42, "litig": 42, "cross": 42, "counterclaim": 42, "lawsuit": 42, "alleg": 42, "constitut": 42, "contributori": 42, "redistribut": 42, "medium": 42, "without": 42, "meet": 42, "give": 42, "recipi": 42, "modifi": 42, "carri": 42, "promin": 42, "chang": 42, "c": 42, "retain": 42, "trademark": 42, "pertain": 42, "part": 42, "text": 42, "least": 42, "one": 42, "place": 42, "along": 42, "wherev": 42, "third": 42, "parti": 42, "normal": 42, "appear": 42, "content": 42, "alongsid": 42, "addendum": 42, "cannot": 42, "constru": 42, "statement": 42, "differ": 42, "compli": 42, "submiss": 42, "unless": 42, "explicitli": 42, "notwithstand": 42, "abov": 42, "noth": 42, "herein": 42, "supersed": 42, "agreement": 42, "regard": 42, "6": 42, "doe": 42, "trade": 42, "servic": 42, "product": 42, "reason": 42, "customari": 42, "describ": 42, "7": 42, "disclaim": 42, "warranti": 42, "applic": 42, "law": 42, "agre": 42, "AS": 42, "basi": 42, "OR": 42, "OF": 42, "kind": 42, "express": 42, "impli": 42, "titl": 42, "merchant": 42, "fit": 42, "particular": 42, "sole": 42, "respons": 42, "determin": 42, "appropri": 42, "assum": 42, "risk": 42, "associ": 42, "liabil": 42, "event": 42, "theori": 42, "tort": 42, "neglig": 42, "deliber": 42, "grossli": 42, "liabl": 42, "damag": 42, "special": 42, "incident": 42, "consequenti": 42, "charact": 42, "aris": 42, "inabl": 42, "loss": 42, "goodwil": 42, "stoppag": 42, "failur": 42, "malfunct": 42, "commerci": 42, "even": 42, "advis": 42, "possibl": 42, "accept": 42, "while": 42, "choos": 42, "fee": 42, "indemn": 42, "oblig": 42, "right": 42, "consist": 42, "howev": 42, "indemnifi": 42, "defend": 42, "harmless": 42, "incur": 42, "assert": 42, "end": 42, "boilerpl": 42, "field": 42, "enclos": 42, "bracket": 42, "don": 42, "t": 42, "comment": 42, "syntax": 42, "descript": 42, "same": 42, "print": 42, "easier": 42, "identif": 42, "archiv": 42, "yyyi": 42, "complianc": 42, "obtain": 42, "languag": 42, "govern": 42}, "objects": {"": [[40, 0, 0, "-", "cvpy"]], "cvpy.annotation.base.Credentials": [[1, 1, 1, "", "Credentials"]], "cvpy.annotation.base.Credentials.Credentials": [[1, 2, 1, "", "__init__"]], "cvpy.annotation.cvat.CVATAuthenticator": [[2, 1, 1, "", "CVATAuthenticator"]], "cvpy.annotation.cvat.CVATAuthenticator.CVATAuthenticator": [[2, 2, 1, "", "__init__"], [3, 2, 1, "", "generate_cvat_token"]], "cvpy.annotation.cvat.CVATProject": [[4, 1, 1, "", "CVATProject"]], "cvpy.annotation.cvat.CVATProject.CVATProject": [[4, 2, 1, "", "__init__"], [5, 2, 1, "", "get_annotations"], [6, 2, 1, "", "post_images"], [7, 2, 1, "", "resume"], [8, 2, 1, "", "save"]], "cvpy.base.CASThreadTunerResults": [[9, 1, 1, "", "CASThreadTunerResults"]], "cvpy.base.CASThreadTunerResults.CASThreadTunerResults": [[9, 2, 1, "", "__init__"], [10, 2, 1, "", "plot_exec_times"]], "cvpy.base.ImageTable": [[11, 1, 1, "", "ImageTable"]], "cvpy.base.ImageTable.ImageTable": [[11, 2, 1, "", "__init__"], [12, 2, 1, "", "as_dict"], [13, 2, 1, "", "from_table"], [14, 2, 1, "", "has_decoded_images"], [15, 2, 1, "", "load"]], "cvpy.biomedimage.BiomedImageTable": [[16, 1, 1, "", "BiomedImageTable"]], "cvpy.biomedimage.BiomedImageTable.BiomedImageTable": [[16, 2, 1, "", "__init__"], [17, 2, 1, "", "as_dict"], [18, 2, 1, "", "fetch_geometry_info"], [19, 2, 1, "", "fetch_image_array"], [20, 2, 1, "", "has_decoded_images"], [21, 2, 1, "", "morphological_gradient"], [22, 2, 1, "", "sphericity"]], "cvpy.image.NaturalImageTable": [[23, 1, 1, "", "NaturalImageTable"]], "cvpy.image.NaturalImageTable.NaturalImageTable": [[23, 2, 1, "", "__init__"], [24, 2, 1, "", "as_dict"], [25, 2, 1, "", "has_decoded_images"], [26, 2, 1, "", "mask_image"]], "cvpy.utils.CASThreadTuner": [[27, 1, 1, "", "CASThreadTuner"]], "cvpy.utils.CASThreadTuner.CASThreadTuner": [[27, 2, 1, "", "__init__"], [28, 2, 1, "", "tune_thread_count"]], "cvpy.utils.ImageUtils": [[29, 1, 1, "", "ImageUtils"]], "cvpy.utils.ImageUtils.ImageUtils": [[29, 2, 1, "", "__init__"], [30, 2, 1, "", "convert_numpy_to_wide"], [31, 2, 1, "", "convert_to_CAS_column"], [32, 2, 1, "", "convert_wide_to_numpy"], [33, 2, 1, "", "get_image_array"], [34, 2, 1, "", "get_image_array_const_ctype"], [35, 2, 1, "", "get_image_array_from_row"]], "cvpy.visualization": [[36, 3, 1, "", "display_3D_image_slices"], [37, 3, 1, "", "display_3D_image_slices_from_array"], [38, 3, 1, "", "display_3D_surface"], [39, 3, 1, "", "display_image_slice"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": [0, 40], "refer": 0, "annot": [0, 1, 2, 3, 4, 5, 6, 7, 8], "base": [0, 1, 9, 10, 11, 12, 13, 14, 15], "credenti": [0, 1], "cvat": [0, 2, 3, 4, 5, 6, 7, 8], "project": 0, "authent": 0, "tabl": [0, 40], "biomed": 0, "imag": [0, 23, 24, 25, 26], "natur": 0, "util": [0, 27, 28, 29, 30, 31, 32, 33, 34, 35], "ca": 0, "thread": 0, "tuner": 0, "result": 0, "visual": [0, 36, 37, 38, 39], "cvpy": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41], "cvatauthent": [2, 3], "generate_cvat_token": 3, "cvatproject": [4, 5, 6, 7, 8], "get_annot": 5, "post_imag": 6, "resum": 7, "save": 8, "casthreadtunerresult": [9, 10], "plot_exec_tim": 10, "imaget": [11, 12, 13, 14, 15], "as_dict": [12, 17, 24], "from_tabl": 13, "has_decoded_imag": [14, 20, 25], "load": 15, "biomedimag": [16, 17, 18, 19, 20, 21, 22], "biomedimaget": [16, 17, 18, 19, 20, 21, 22], "fetch_geometry_info": 18, "fetch_image_arrai": 19, "morphological_gradi": 21, "spheric": 22, "naturalimaget": [23, 24, 25, 26], "mask_imag": 26, "casthreadtun": [27, 28], "tune_thread_count": 28, "imageutil": [29, 30, 31, 32, 33, 34, 35], "convert_numpy_to_wid": 30, "convert_to_cas_column": 31, "convert_wide_to_numpi": 32, "get_image_arrai": 33, "get_image_array_const_ctyp": 34, "get_image_array_from_row": 35, "display_3d_image_slic": 36, "display_3d_image_slices_from_arrai": 37, "display_3d_surfac": 38, "display_image_slic": 39, "sa": 40, "viya": 40, "comput": 40, "vision": 40, "python": 40, "overview": 40, "contribut": 40, "licens": [40, 42], "addit": 40, "resourc": 40, "content": 40, "index": 40, "instal": 41, "prerequisit": 41, "mayavi": 41}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Annotation": [[0, "annotation"]], "Base": [[0, "base"]], "Credentials": [[0, "credentials"]], "CVAT": [[0, "cvat"]], "CVAT Project": [[0, "cvat-project"]], "CVAT Authentication": [[0, "cvat-authentication"]], "Tables": [[0, "tables"]], "Biomedical Image Table": [[0, "biomedical-image-table"]], "Image Table": [[0, "image-table"]], "Natural Image Table": [[0, "natural-image-table"]], "Utilities": [[0, "utilities"]], "CAS Thread Tuner": [[0, "cas-thread-tuner"]], "CAS Thread Tuner Results": [[0, "cas-thread-tuner-results"]], "Image Utilities": [[0, "image-utilities"]], "Visualization": [[0, "visualization"]], "cvpy.annotation.base.Credentials.Credentials": [[1, "cvpy-annotation-base-credentials-credentials"]], "cvpy.annotation.cvat.CVATAuthenticator.CVATAuthenticator": [[2, "cvpy-annotation-cvat-cvatauthenticator-cvatauthenticator"]], "cvpy.annotation.cvat.CVATAuthenticator.CVATAuthenticator.generate_cvat_token": [[3, "cvpy-annotation-cvat-cvatauthenticator-cvatauthenticator-generate-cvat-token"]], "cvpy.annotation.cvat.CVATProject.CVATProject": [[4, "cvpy-annotation-cvat-cvatproject-cvatproject"]], "cvpy.annotation.cvat.CVATProject.CVATProject.get_annotations": [[5, "cvpy-annotation-cvat-cvatproject-cvatproject-get-annotations"]], "cvpy.annotation.cvat.CVATProject.CVATProject.post_images": [[6, "cvpy-annotation-cvat-cvatproject-cvatproject-post-images"]], "cvpy.annotation.cvat.CVATProject.CVATProject.resume": [[7, "cvpy-annotation-cvat-cvatproject-cvatproject-resume"]], "cvpy.annotation.cvat.CVATProject.CVATProject.save": [[8, "cvpy-annotation-cvat-cvatproject-cvatproject-save"]], "cvpy.base.CASThreadTunerResults.CASThreadTunerResults": [[9, "cvpy-base-casthreadtunerresults-casthreadtunerresults"]], "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times": [[10, "cvpy-base-casthreadtunerresults-casthreadtunerresults-plot-exec-times"]], "cvpy.base.ImageTable.ImageTable": [[11, "cvpy-base-imagetable-imagetable"]], "cvpy.base.ImageTable.ImageTable.as_dict": [[12, "cvpy-base-imagetable-imagetable-as-dict"]], "cvpy.base.ImageTable.ImageTable.from_table": [[13, "cvpy-base-imagetable-imagetable-from-table"]], "cvpy.base.ImageTable.ImageTable.has_decoded_images": [[14, "cvpy-base-imagetable-imagetable-has-decoded-images"]], "cvpy.base.ImageTable.ImageTable.load": [[15, "cvpy-base-imagetable-imagetable-load"]], "cvpy.biomedimage.BiomedImageTable.BiomedImageTable": [[16, "cvpy-biomedimage-biomedimagetable-biomedimagetable"]], "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.as_dict": [[17, "cvpy-biomedimage-biomedimagetable-biomedimagetable-as-dict"]], "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.fetch_geometry_info": [[18, "cvpy-biomedimage-biomedimagetable-biomedimagetable-fetch-geometry-info"]], "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.fetch_image_array": [[19, "cvpy-biomedimage-biomedimagetable-biomedimagetable-fetch-image-array"]], "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.has_decoded_images": [[20, "cvpy-biomedimage-biomedimagetable-biomedimagetable-has-decoded-images"]], "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.morphological_gradient": [[21, "cvpy-biomedimage-biomedimagetable-biomedimagetable-morphological-gradient"]], "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.sphericity": [[22, "cvpy-biomedimage-biomedimagetable-biomedimagetable-sphericity"]], "cvpy.image.NaturalImageTable.NaturalImageTable": [[23, "cvpy-image-naturalimagetable-naturalimagetable"]], "cvpy.image.NaturalImageTable.NaturalImageTable.as_dict": [[24, "cvpy-image-naturalimagetable-naturalimagetable-as-dict"]], "cvpy.image.NaturalImageTable.NaturalImageTable.has_decoded_images": [[25, "cvpy-image-naturalimagetable-naturalimagetable-has-decoded-images"]], "cvpy.image.NaturalImageTable.NaturalImageTable.mask_image": [[26, "cvpy-image-naturalimagetable-naturalimagetable-mask-image"]], "cvpy.utils.CASThreadTuner.CASThreadTuner": [[27, "cvpy-utils-casthreadtuner-casthreadtuner"]], "cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count": [[28, "cvpy-utils-casthreadtuner-casthreadtuner-tune-thread-count"]], "cvpy.utils.ImageUtils.ImageUtils": [[29, "cvpy-utils-imageutils-imageutils"]], "cvpy.utils.ImageUtils.ImageUtils.convert_numpy_to_wide": [[30, "cvpy-utils-imageutils-imageutils-convert-numpy-to-wide"]], "cvpy.utils.ImageUtils.ImageUtils.convert_to_CAS_column": [[31, "cvpy-utils-imageutils-imageutils-convert-to-cas-column"]], "cvpy.utils.ImageUtils.ImageUtils.convert_wide_to_numpy": [[32, "cvpy-utils-imageutils-imageutils-convert-wide-to-numpy"]], "cvpy.utils.ImageUtils.ImageUtils.get_image_array": [[33, "cvpy-utils-imageutils-imageutils-get-image-array"]], "cvpy.utils.ImageUtils.ImageUtils.get_image_array_const_ctype": [[34, "cvpy-utils-imageutils-imageutils-get-image-array-const-ctype"]], "cvpy.utils.ImageUtils.ImageUtils.get_image_array_from_row": [[35, "cvpy-utils-imageutils-imageutils-get-image-array-from-row"]], "cvpy.visualization.display_3D_image_slices": [[36, "cvpy-visualization-display-3d-image-slices"]], "cvpy.visualization.display_3D_image_slices_from_array": [[37, "cvpy-visualization-display-3d-image-slices-from-array"]], "cvpy.visualization.display_3D_surface": [[38, "cvpy-visualization-display-3d-surface"]], "cvpy.visualization.display_image_slice": [[39, "cvpy-visualization-display-image-slice"]], "SAS Viya Computer Vision API for Python": [[40, "module-cvpy"]], "Overview": [[40, "overview"]], "Contributing": [[40, "contributing"]], "License": [[40, "license"], [42, "license"]], "Additional Resources": [[40, "additional-resources"]], "Table of Contents": [[40, "table-of-contents"]], "Index": [[40, "index"]], "Installation": [[41, "installation"]], "Prerequisites": [[41, "prerequisites"]], "Mayavi Installation": [[41, "mayavi-installation"]], "CVPy Installation": [[41, "cvpy-installation"]]}, "indexentries": {"credentials (class in cvpy.annotation.base.credentials)": [[1, "cvpy.annotation.base.Credentials.Credentials"]], "__init__() (cvpy.annotation.base.credentials.credentials method)": [[1, "cvpy.annotation.base.Credentials.Credentials.__init__"]], "cvatauthenticator (class in cvpy.annotation.cvat.cvatauthenticator)": [[2, "cvpy.annotation.cvat.CVATAuthenticator.CVATAuthenticator"]], "__init__() (cvpy.annotation.cvat.cvatauthenticator.cvatauthenticator method)": [[2, "cvpy.annotation.cvat.CVATAuthenticator.CVATAuthenticator.__init__"]], "generate_cvat_token() (cvpy.annotation.cvat.cvatauthenticator.cvatauthenticator static method)": [[3, "cvpy.annotation.cvat.CVATAuthenticator.CVATAuthenticator.generate_cvat_token"]], "cvatproject (class in cvpy.annotation.cvat.cvatproject)": [[4, "cvpy.annotation.cvat.CVATProject.CVATProject"]], "__init__() (cvpy.annotation.cvat.cvatproject.cvatproject method)": [[4, "cvpy.annotation.cvat.CVATProject.CVATProject.__init__"]], "get_annotations() (cvpy.annotation.cvat.cvatproject.cvatproject method)": [[5, "cvpy.annotation.cvat.CVATProject.CVATProject.get_annotations"]], "post_images() (cvpy.annotation.cvat.cvatproject.cvatproject method)": [[6, "cvpy.annotation.cvat.CVATProject.CVATProject.post_images"]], "resume() (cvpy.annotation.cvat.cvatproject.cvatproject static method)": [[7, "cvpy.annotation.cvat.CVATProject.CVATProject.resume"]], "save() (cvpy.annotation.cvat.cvatproject.cvatproject method)": [[8, "cvpy.annotation.cvat.CVATProject.CVATProject.save"]], "casthreadtunerresults (class in cvpy.base.casthreadtunerresults)": [[9, "cvpy.base.CASThreadTunerResults.CASThreadTunerResults"]], "__init__() (cvpy.base.casthreadtunerresults.casthreadtunerresults method)": [[9, "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.__init__"]], "plot_exec_times() (cvpy.base.casthreadtunerresults.casthreadtunerresults method)": [[10, "cvpy.base.CASThreadTunerResults.CASThreadTunerResults.plot_exec_times"]], "imagetable (class in cvpy.base.imagetable)": [[11, "cvpy.base.ImageTable.ImageTable"]], "__init__() (cvpy.base.imagetable.imagetable method)": [[11, "cvpy.base.ImageTable.ImageTable.__init__"]], "as_dict() (cvpy.base.imagetable.imagetable method)": [[12, "cvpy.base.ImageTable.ImageTable.as_dict"]], "from_table() (cvpy.base.imagetable.imagetable static method)": [[13, "cvpy.base.ImageTable.ImageTable.from_table"]], "has_decoded_images() (cvpy.base.imagetable.imagetable method)": [[14, "cvpy.base.ImageTable.ImageTable.has_decoded_images"]], "load() (cvpy.base.imagetable.imagetable static method)": [[15, "cvpy.base.ImageTable.ImageTable.load"]], "biomedimagetable (class in cvpy.biomedimage.biomedimagetable)": [[16, "cvpy.biomedimage.BiomedImageTable.BiomedImageTable"]], "__init__() (cvpy.biomedimage.biomedimagetable.biomedimagetable method)": [[16, "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.__init__"]], "as_dict() (cvpy.biomedimage.biomedimagetable.biomedimagetable method)": [[17, "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.as_dict"]], "fetch_geometry_info() (cvpy.biomedimage.biomedimagetable.biomedimagetable method)": [[18, "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.fetch_geometry_info"]], "fetch_image_array() (cvpy.biomedimage.biomedimagetable.biomedimagetable method)": [[19, "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.fetch_image_array"]], "has_decoded_images() (cvpy.biomedimage.biomedimagetable.biomedimagetable method)": [[20, "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.has_decoded_images"]], "morphological_gradient() (cvpy.biomedimage.biomedimagetable.biomedimagetable method)": [[21, "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.morphological_gradient"]], "sphericity() (cvpy.biomedimage.biomedimagetable.biomedimagetable method)": [[22, "cvpy.biomedimage.BiomedImageTable.BiomedImageTable.sphericity"]], "naturalimagetable (class in cvpy.image.naturalimagetable)": [[23, "cvpy.image.NaturalImageTable.NaturalImageTable"]], "__init__() (cvpy.image.naturalimagetable.naturalimagetable method)": [[23, "cvpy.image.NaturalImageTable.NaturalImageTable.__init__"]], "as_dict() (cvpy.image.naturalimagetable.naturalimagetable method)": [[24, "cvpy.image.NaturalImageTable.NaturalImageTable.as_dict"]], "has_decoded_images() (cvpy.image.naturalimagetable.naturalimagetable method)": [[25, "cvpy.image.NaturalImageTable.NaturalImageTable.has_decoded_images"]], "mask_image() (cvpy.image.naturalimagetable.naturalimagetable method)": [[26, "cvpy.image.NaturalImageTable.NaturalImageTable.mask_image"]], "casthreadtuner (class in cvpy.utils.casthreadtuner)": [[27, "cvpy.utils.CASThreadTuner.CASThreadTuner"]], "__init__() (cvpy.utils.casthreadtuner.casthreadtuner method)": [[27, "cvpy.utils.CASThreadTuner.CASThreadTuner.__init__"]], "tune_thread_count() (cvpy.utils.casthreadtuner.casthreadtuner static method)": [[28, "cvpy.utils.CASThreadTuner.CASThreadTuner.tune_thread_count"]], "imageutils (class in cvpy.utils.imageutils)": [[29, "cvpy.utils.ImageUtils.ImageUtils"]], "__init__() (cvpy.utils.imageutils.imageutils method)": [[29, "cvpy.utils.ImageUtils.ImageUtils.__init__"]], "convert_numpy_to_wide() (cvpy.utils.imageutils.imageutils static method)": [[30, "cvpy.utils.ImageUtils.ImageUtils.convert_numpy_to_wide"]], "convert_to_cas_column() (cvpy.utils.imageutils.imageutils static method)": [[31, "cvpy.utils.ImageUtils.ImageUtils.convert_to_CAS_column"]], "convert_wide_to_numpy() (cvpy.utils.imageutils.imageutils static method)": [[32, "cvpy.utils.ImageUtils.ImageUtils.convert_wide_to_numpy"]], "get_image_array() (cvpy.utils.imageutils.imageutils static method)": [[33, "cvpy.utils.ImageUtils.ImageUtils.get_image_array"]], "get_image_array_const_ctype() (cvpy.utils.imageutils.imageutils static method)": [[34, "cvpy.utils.ImageUtils.ImageUtils.get_image_array_const_ctype"]], "get_image_array_from_row() (cvpy.utils.imageutils.imageutils static method)": [[35, "cvpy.utils.ImageUtils.ImageUtils.get_image_array_from_row"]], "display_3d_image_slices() (in module cvpy.visualization)": [[36, "cvpy.visualization.display_3D_image_slices"]], "display_3d_image_slices_from_array() (in module cvpy.visualization)": [[37, "cvpy.visualization.display_3D_image_slices_from_array"]], "display_3d_surface() (in module cvpy.visualization)": [[38, "cvpy.visualization.display_3D_surface"]], "display_image_slice() (in module cvpy.visualization)": [[39, "cvpy.visualization.display_image_slice"]], "cvpy": [[40, "module-cvpy"]], "module": [[40, "module-cvpy"]]}})